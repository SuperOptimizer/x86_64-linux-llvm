#!/usr/bin/env bash
set -euo pipefail
# Configuration
JOBS=$(nproc)
# Directories
HOME_DIR="$HOME"
WORK_DIR="${HOME_DIR}/build"
SRC_DIR="${HOME_DIR}/src"
SYSROOT_DIR="${HOME_DIR}/sysroot"
TOOLCHAIN_DIR="${HOME_DIR}/toolchain"
SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

# Create necessary directories if they don't exist
mkdir -p "${SRC_DIR}" "${SYSROOT_DIR}" "${SYSROOT_DIR}/bin/" "${SYSROOT_DIR}/usr" "${TOOLCHAIN_DIR}" "${TOOLCHAIN_DIR}/usr"

if [ ! -d "${SRC_DIR}/linux" ]; then
    cd "${SRC_DIR}"
    git clone --depth 1 https://github.com/torvalds/linux.git
fi

if [ ! -d "${SRC_DIR}/llvm-project" ]; then
    cd "${SRC_DIR}"
    git clone --depth 1 https://github.com/SuperOptimizer/llvm-project.git
fi

# Checkout musl libc
if [ ! -d "${SRC_DIR}/musl" ]; then
    cd "${SRC_DIR}"
    git clone --depth 1https://github.com/SuperOptimizer/musl.git
fi

cp "${SCRIPT_DIR}/musl-clang" "${SYSROOT_DIR}/bin/"
cp "${SCRIPT_DIR}/musl-clang++" "${SYSROOT_DIR}/bin/"


if [ ! -f "${TOOLCHAIN_DIR}/bin/clang" ]; then


  # Install kernel headers to sysroot
  cd "${SRC_DIR}/linux"
  make headers_install ARCH=x86_64 INSTALL_HDR_PATH="${SYSROOT_DIR}/usr"

  # Configure and build musl
  cd "${SRC_DIR}/musl"
  # Clean previous builds if any
  make clean || true

  CC=clang CFLAGS="-O2 -flto=full -ffat-lto-objects -static " ./configure --prefix="${SYSROOT_DIR}" --disable-shared
  make -j${JOBS} CC=clang
  make install
  cp "${SCRIPT_DIR}/musl-clang" "${SYSROOT_DIR}/bin/"
  cp "${SCRIPT_DIR}/musl-clang++" "${SYSROOT_DIR}/bin/"

  mkdir -p "${WORK_DIR}/stage1-build"
  cd "${WORK_DIR}/stage1-build"
  cmake -G Ninja "${SRC_DIR}/llvm-project/runtimes" \
  -DCMAKE_SYSTEM_NAME="Linux" \
  -DBUILD_SHARED_LIBS=OFF  \
  -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
  -DCLANG_DEFAULT_LINKER=lld \
  -DCLANG_DEFAULT_PIE_ON_LINUX=OFF \
  -DCLANG_DEFAULT_RTLIB=compiler-rt \
  -DCLANG_DEFAULT_UNWINDLIB=libunwind \
  -DCLANG_ENABLE_PLUGINS=OFF \
  -DCLANG_INSTALL_SHARED_LIBRARY=OFF \
  -DCLANG_LINK_CLANG_DYLIB=OFF \
  -DCMAKE_BUILD_TYPE=MinSizeRel \
  -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
  -DCMAKE_CXX_COMPILER=clang++-21 \
  -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
  -DCMAKE_CXX_COMPILER_TARGET="x86_64-linux-musl" \
  -DCMAKE_CXX_COMPILER_WORKS=1 \
  -DCMAKE_CXX_FLAGS="-w -g0  -march=x86-64-v3  "  \
  -DCMAKE_CXX_STANDARD=20 \
  -DCMAKE_C_COMPILER=clang-21 \
  -DCMAKE_C_COMPILER_LAUNCHER=ccache \
  -DCMAKE_C_COMPILER_TARGET="x86_64-linux-musl" \
  -DCMAKE_C_COMPILER_WORKS=1 \
  -DCMAKE_C_FLAGS="-w -g0 -march=x86-64-v3 " \
  -DCMAKE_INSTALL_PREFIX="${SYSROOT_DIR}" \
  -DCMAKE_INSTALL_RPATH="\$ORIGIN/../lib" \
  -DCMAKE_SYSROOT="${SYSROOT_DIR}" \
  -DCMAKE_TARGET_TRIPLE="x86_64-linux-musl" \
  -DCOMPILER_RT_BUILD_BUILTINS=ON \
  -DCOMPILER_RT_BUILD_CRT=ON \
  -DCOMPILER_RT_BUILD_GWP_ASAN=OFF                       \
  -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
  -DCOMPILER_RT_BUILD_MEMPROF=OFF \
  -DCOMPILER_RT_BUILD_ORC=OFF \
  -DCOMPILER_RT_BUILD_PROFILE=OFF \
  -DCOMPILER_RT_BUILD_SANITIZERS=ON        \
  -DCOMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=OFF \
  -DCOMPILER_RT_BUILD_XRAY=OFF \
  -DCOMPILER_RT_CXX_LIBRARY=libcxx \
  -DCOMPILER_RT_DEFAULT_TARGET_ARCH="x86_64-linux-musl" \
  -DCOMPILER_RT_DEFAULT_TARGET_TRIPLE="x86_64-linux-musl" \
  -DCOMPILER_RT_ENABLE_STATIC_UNWINDER=ON \
  -DCOMPILER_RT_ENABLE_THREADS=ON \
  -DCOMPILER_RT_EXTERNALIZE_DEBUGINFO=OFF \
  -DCOMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF        \
  -DCOMPILER_RT_STATIC_CXX_LIBRARY=ON \
  -DCOMPILER_RT_USE_ATOMIC_LIBRARY=ON \
  -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
  -DCOMPILER_RT_USE_LLVM_UNWINDER=ON \
  -DLIBCXXABI_ENABLE_ASSERTIONS=OFF \
  -DLIBCXXABI_ENABLE_FORGIVING_DYNAMIC_CAST=ON \
  -DLIBCXXABI_ENABLE_SHARED=OFF \
  -DLIBCXXABI_ENABLE_STATIC=ON \
  -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DLIBCXXABI_ENABLE_THREADS=ON \
  -DLIBCXXABI_HERMETIC_STATIC_LIBRARY=ON \
  -DLIBCXXABI_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBCXXABI_INSTALL_STATIC_LIBRARY=ON \
  -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=ON \
  -DLIBCXXABI_USE_COMPILER_RT=ON \
  -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DLIBCXX_ABI_UNSTABLE=ON \
  -DLIBCXX_CXX_ABI=libcxxabi \
  -DLIBCXX_ENABLE_EXCEPTIONS=ON \
  -DLIBCXX_ENABLE_FILESYSTEM=ON \
  -DLIBCXX_ENABLE_LOCALIZATION=ON \
  -DLIBCXX_ENABLE_MONOTONIC_CLOCK=ON \
  -DLIBCXX_ENABLE_RANDOM_DEVICE=ON \
  -DLIBCXX_ENABLE_RTTI=ON \
  -DLIBCXX_ENABLE_SHARED=OFF \
  -DLIBCXX_ENABLE_SHARED_LIBRARY=OFF \
  -DLIBCXX_ENABLE_STATIC=ON \
  -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DLIBCXX_ENABLE_THREADS=ON \
  -DLIBCXX_ENABLE_TIME_ZONE_DATABASE=ON \
  -DLIBCXX_ENABLE_UNICODE=ON \
  -DLIBCXX_ENABLE_WIDE_CHARACTERS=ON \
  -DLIBCXX_HAS_MUSL_LIBC=ON \
  -DLIBCXX_HAS_PTHREAD_API=ON \
  -DLIBCXX_HAS_TERMINAL_AVAILABLE=OFF \
  -DLIBCXX_HERMETIC_STATIC_LIBRARY=ON \
  -DLIBCXX_INCLUDE_TESTS=OFF \
  -DLIBCXX_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBCXX_INSTALL_STATIC_LIBRARY=ON \
  -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
  -DLIBCXX_SUPPORTED_C_LIBRARIES=system \
  -DLIBCXX_SUPPORTED_HARDENING_MODES=none \
  -DLIBCXX_USE_COMPILER_RT=ON \
  -DLIBC_CONF_ERRNO_MODE=LIBC_ERRNO_MODE_SHARED \
  -DLIBC_ENABLE_USE_BY_CLANG=OFF \
  -DLIBC_ENABLE_WIDE_CHARACTERS=ON \
  -DLIBUNWIND_ENABLE_ASSERTIONS=OFF \
  -DLIBUNWIND_ENABLE_PEDANTIC=OFF \
  -DLIBUNWIND_ENABLE_SHARED=OFF \
  -DLIBUNWIND_ENABLE_STATIC=ON \
  -DLIBUNWIND_ENABLE_THREADS=ON \
  -DLIBUNWIND_HIDE_SYMBOLS=ON \
  -DLIBUNWIND_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBUNWIND_INSTALL_STATIC_LIBRARY=ON \
  -DLIBUNWIND_USE_COMPILER_RT=ON \
  -DLLDB_DISABLE_CURSES=ON \
  -DLLDB_DISABLE_LIBEDIT=ON \
  -DLLDB_DISABLE_PYTHON=ON \
  -DLLDB_ENABLE_LIBXML2=OFF \
  -DLLDB_ENABLE_LUA=OFF \
  -DLLDB_ENABLE_LZMA=OFF  \
  -DLLVM_BUILD_LLVM_C_DYLIB=OFF \
  -DLLVM_BUILD_LLVM_DYLIB=OFF \
  -DLLVM_BUILD_STATIC=ON \
  -DLLVM_CCACHE_BUILD=ON \
  -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-linux-musl \
  -DLLVM_DYLIB_EXPORT_INLINES=OFF \
  -DLLVM_ENABLE_EH=OFF \
  -DLLVM_ENABLE_EXPENSIVE_CHECKS=OFF \
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLLVM_ENABLE_LIBPFM=ON \
  -DLLVM_ENABLE_LLD=ON \
  -DLLVM_ENABLE_LLVM_LIBC=OFF \
  -DLLVM_ENABLE_LTO=OFF \
  -DLLVM_ENABLE_MODULES=OFF \
  -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \
  -DLLVM_ENABLE_PIC=OFF \
  -DLLVM_ENABLE_PLUGINS=OFF \
  -DLLVM_ENABLE_RTTI=OFF \
  -DLLVM_ENABLE_RUNTIMES="compiler-rt;libunwind;libcxx;libcxxabi" \
  -DLLVM_ENABLE_THREADS=ON \
  -DLLVM_ENABLE_UNWIND_TABLES=OFF \
  -DLLVM_EXTERNALIZE_DEBUGINFO=OFF \
  -DLLVM_INCLUDE_BENCHMARKS=OFF \
  -DLLVM_INCLUDE_EXAMPLES=OFF \
  -DLLVM_INCLUDE_TESTS=OFF \
  -DLLVM_INCLUDE_TOOLS=ON \
  -DLLVM_INSTALL_TOOLCHAIN_ONLY=OFF \
  -DLLVM_INSTALL_UTILS=OFF \
  -DLLVM_LIBC_FULL_BUILD=OFF \
  -DLLVM_LIBC_INCLUDE_SCUDO=OFF \
  -DLLVM_LINK_LLVM_DYLIB=OFF \
  -DLLVM_PARALLEL_COMPILE_JOBS=32 \
  -DLLVM_PARALLEL_LINK_JOBS=32 \
  -DLLVM_PARALLEL_TABLEGEN_JOBS=32 \
  -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
  -DLLVM_TARGETS_TO_BUILD=X86 \
  -DLLVM_TARGET_ARCH="X86" \
  -DLLVM_UNREACHABLE_OPTIMIZE=ON  \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_SYSTEM_NAME="Linux" \
  -DRUNTIMES_x86_64-linux-musl_BUILD_SHARED_LIBS=OFF \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_BUILD_TYPE=MinSizeRel \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_BUILD_WITH_INSTALL_RPATH=ON \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER=clang++-21 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER_LAUNCHER=ccache \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER_TARGET="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_FLAGS="-w -g0  -march=x86-64-v3  "  \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_STANDARD=20 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER=clang-21 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER_LAUNCHER=ccache \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER_TARGET="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_FLAGS="-w -g0 -march=x86-64-v3 " \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_INSTALL_PREFIX="${SYSROOT_DIR}" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_INSTALL_RPATH="\$ORIGIN/../lib" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_SYSROOT="${SYSROOT_DIR}" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_TARGET_TRIPLE="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_BUILTINS=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_CRT=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_GWP_ASAN=OFF                       \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_LIBFUZZER=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_MEMPROF=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_ORC=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_PROFILE=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_SANITIZERS=ON        \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_XRAY=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_CXX_LIBRARY=libcxx \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_DEFAULT_TARGET_ARCH="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_DEFAULT_TARGET_TRIPLE="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_ENABLE_STATIC_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_EXTERNALIZE_DEBUGINFO=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF        \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_STATIC_CXX_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_ATOMIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_BUILTINS_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_ASSERTIONS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_FORGIVING_DYNAMIC_CAST=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_HERMETIC_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ABI_UNSTABLE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_CXX_ABI=libcxxabi \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_EXCEPTIONS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_FILESYSTEM=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_LOCALIZATION=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_MONOTONIC_CLOCK=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_RANDOM_DEVICE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_RTTI=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_TIME_ZONE_DATABASE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_UNICODE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_WIDE_CHARACTERS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_MUSL_LIBC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_PTHREAD_API=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_TERMINAL_AVAILABLE=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HERMETIC_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INCLUDE_TESTS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_SUPPORTED_C_LIBRARIES=system \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_SUPPORTED_HARDENING_MODES=none \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBC_CONF_ERRNO_MODE=LIBC_ERRNO_MODE_SHARED \
  -DRUNTIMES_x86_64-linux-musl_LIBC_ENABLE_USE_BY_CLANG=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBC_ENABLE_WIDE_CHARACTERS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_ASSERTIONS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_PEDANTIC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_HIDE_SYMBOLS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LLVM_LIBC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LTO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_MODULES=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LIBC_FULL_BUILD=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LIBC_INCLUDE_SCUDO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_COMPILE_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_LINK_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_TABLEGEN_JOBS=32

  ninja
  ninja install

  # our host compiler is linked against glibc and tries to auto insert gcc_eh.a into everything
  # it links despite the fast that we are using llvm compiler rt etc. so create a dummpy libgcc_eh.a
  touch "${SYSROOT_DIR}/lib/libgcc_eh.a"

  #we shouldn't really need to rebuild the runtimes here but if I dont i run into issues with
  #compiler rt builtins and stuff and settings not getting reflected properly so lets just do both
  mkdir -p "${WORK_DIR}/stage2-build"
  cd "${WORK_DIR}/stage2-build"
  cmake -G Ninja "${SRC_DIR}/llvm-project/llvm" \
  -DCMAKE_SYSTEM_NAME="Linux" \
  -DBUILD_SHARED_LIBS=OFF  \
  -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
  -DCLANG_DEFAULT_LINKER=lld \
  -DCLANG_DEFAULT_PIE_ON_LINUX=OFF \
  -DCLANG_DEFAULT_RTLIB=compiler-rt \
  -DCLANG_DEFAULT_UNWINDLIB=libunwind \
  -DCLANG_ENABLE_PLUGINS=OFF \
  -DCLANG_INSTALL_SHARED_LIBRARY=OFF \
  -DCLANG_LINK_CLANG_DYLIB=OFF \
  -DCMAKE_BUILD_TYPE=MinSizeRel \
  -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
  -DCMAKE_CXX_COMPILER=clang++-21 \
  -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
  -DCMAKE_CXX_COMPILER_TARGET="x86_64-linux-musl" \
  -DCMAKE_CXX_COMPILER_WORKS=1 \
  -DCMAKE_CXX_FLAGS="-w -g0  -march=x86-64-v3 -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -D_LIBCPP_PROVIDES_DEFAULT_RUNE_TABLE --sysroot ${SYSROOT_DIR}  -static -static-libgcc -nostdinc++ -isystem ${SYSROOT_DIR}/include/c++/v1 "  \
  -DCMAKE_CXX_STANDARD=20 \
  -DCMAKE_C_COMPILER=clang-21 \
  -DCMAKE_C_COMPILER_LAUNCHER=ccache \
  -DCMAKE_C_COMPILER_TARGET="x86_64-linux-musl" \
  -DCMAKE_C_COMPILER_WORKS=1 \
  -DCMAKE_C_FLAGS="-w -g0 -march=x86-64-v3   -unwind=libunwind --rtlib=compiler-rt --sysroot ${SYSROOT_DIR} -static -static-libgcc " \
  -DCMAKE_EXE_LINKER_FLAGS=" -Wl,--threads=8  --sysroot ${SYSROOT_DIR}  -march=x86-64-v3 -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -static  -static-libgcc -static " \
  -DCMAKE_INSTALL_PREFIX="${SYSROOT_DIR}" \
  -DCMAKE_INSTALL_RPATH="\$ORIGIN/../lib" \
  -DCMAKE_SYSROOT="${SYSROOT_DIR}" \
  -DCMAKE_TARGET_TRIPLE="x86_64-linux-musl" \
  -DCOMPILER_RT_BUILD_BUILTINS=ON \
  -DCOMPILER_RT_BUILD_CRT=ON \
  -DCOMPILER_RT_BUILD_GWP_ASAN=OFF                       \
  -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
  -DCOMPILER_RT_BUILD_MEMPROF=OFF \
  -DCOMPILER_RT_BUILD_ORC=OFF \
  -DCOMPILER_RT_BUILD_PROFILE=OFF \
  -DCOMPILER_RT_BUILD_SANITIZERS=ON        \
  -DCOMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=OFF \
  -DCOMPILER_RT_BUILD_XRAY=OFF \
  -DCOMPILER_RT_CXX_LIBRARY=libcxx \
  -DCOMPILER_RT_DEFAULT_TARGET_ARCH="x86_64-linux-musl" \
  -DCOMPILER_RT_DEFAULT_TARGET_TRIPLE="x86_64-linux-musl" \
  -DCOMPILER_RT_ENABLE_STATIC_UNWINDER=ON \
  -DCOMPILER_RT_ENABLE_THREADS=ON \
  -DCOMPILER_RT_EXTERNALIZE_DEBUGINFO=OFF \
  -DCOMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF        \
  -DCOMPILER_RT_STATIC_CXX_LIBRARY=ON \
  -DCOMPILER_RT_USE_ATOMIC_LIBRARY=ON \
  -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
  -DCOMPILER_RT_USE_LLVM_UNWINDER=ON \
  -DLIBCXXABI_ENABLE_ASSERTIONS=OFF \
  -DLIBCXXABI_ENABLE_FORGIVING_DYNAMIC_CAST=ON \
  -DLIBCXXABI_ENABLE_SHARED=OFF \
  -DLIBCXXABI_ENABLE_STATIC=ON \
  -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DLIBCXXABI_ENABLE_THREADS=ON \
  -DLIBCXXABI_HERMETIC_STATIC_LIBRARY=ON \
  -DLIBCXXABI_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBCXXABI_INSTALL_STATIC_LIBRARY=ON \
  -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=ON \
  -DLIBCXXABI_USE_COMPILER_RT=ON \
  -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DLIBCXX_ABI_UNSTABLE=ON \
  -DLIBCXX_CXX_ABI=libcxxabi \
  -DLIBCXX_ENABLE_EXCEPTIONS=ON \
  -DLIBCXX_ENABLE_FILESYSTEM=ON \
  -DLIBCXX_ENABLE_LOCALIZATION=ON \
  -DLIBCXX_ENABLE_MONOTONIC_CLOCK=ON \
  -DLIBCXX_ENABLE_RANDOM_DEVICE=ON \
  -DLIBCXX_ENABLE_RTTI=ON \
  -DLIBCXX_ENABLE_SHARED=OFF \
  -DLIBCXX_ENABLE_SHARED_LIBRARY=OFF \
  -DLIBCXX_ENABLE_STATIC=ON \
  -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DLIBCXX_ENABLE_THREADS=ON \
  -DLIBCXX_ENABLE_TIME_ZONE_DATABASE=ON \
  -DLIBCXX_ENABLE_UNICODE=ON \
  -DLIBCXX_ENABLE_WIDE_CHARACTERS=ON \
  -DLIBCXX_HAS_MUSL_LIBC=ON \
  -DLIBCXX_HAS_PTHREAD_API=ON \
  -DLIBCXX_HAS_TERMINAL_AVAILABLE=OFF \
  -DLIBCXX_HERMETIC_STATIC_LIBRARY=ON \
  -DLIBCXX_INCLUDE_TESTS=OFF \
  -DLIBCXX_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBCXX_INSTALL_STATIC_LIBRARY=ON \
  -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
  -DLIBCXX_SUPPORTED_C_LIBRARIES=system \
  -DLIBCXX_SUPPORTED_HARDENING_MODES=none \
  -DLIBCXX_USE_COMPILER_RT=ON \
  -DLIBC_CONF_ERRNO_MODE=LIBC_ERRNO_MODE_SHARED \
  -DLIBC_ENABLE_USE_BY_CLANG=OFF \
  -DLIBC_ENABLE_WIDE_CHARACTERS=ON \
  -DLIBUNWIND_ENABLE_ASSERTIONS=OFF \
  -DLIBUNWIND_ENABLE_PEDANTIC=OFF \
  -DLIBUNWIND_ENABLE_SHARED=OFF \
  -DLIBUNWIND_ENABLE_STATIC=ON \
  -DLIBUNWIND_ENABLE_THREADS=ON \
  -DLIBUNWIND_HIDE_SYMBOLS=ON \
  -DLIBUNWIND_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBUNWIND_INSTALL_STATIC_LIBRARY=ON \
  -DLIBUNWIND_USE_COMPILER_RT=ON \
  -DLLDB_DISABLE_CURSES=ON \
  -DLLDB_DISABLE_LIBEDIT=ON \
  -DLLDB_DISABLE_PYTHON=ON \
  -DLLDB_ENABLE_LIBXML2=OFF \
  -DLLDB_ENABLE_LUA=OFF \
  -DLLDB_ENABLE_LZMA=OFF  \
  -DLLVM_BUILD_LLVM_C_DYLIB=OFF \
  -DLLVM_BUILD_LLVM_DYLIB=OFF \
  -DLLVM_BUILD_STATIC=ON \
  -DLLVM_CCACHE_BUILD=ON \
  -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-linux-musl \
  -DLLVM_DYLIB_EXPORT_INLINES=OFF \
  -DLLVM_ENABLE_EH=OFF \
  -DLLVM_ENABLE_EXPENSIVE_CHECKS=OFF \
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLLVM_ENABLE_LIBPFM=ON \
  -DLLVM_ENABLE_LLD=ON \
  -DLLVM_ENABLE_LLVM_LIBC=OFF \
  -DLLVM_ENABLE_LTO=OFF \
  -DLLVM_ENABLE_MODULES=OFF \
  -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \
  -DLLVM_ENABLE_PIC=OFF \
  -DLLVM_ENABLE_PLUGINS=OFF \
  -DLLVM_ENABLE_PROJECTS="clang;lld" \
  -DLLVM_ENABLE_RTTI=OFF \
  -DLLVM_ENABLE_RUNTIMES="compiler-rt;libunwind;libcxx;libcxxabi" \
  -DLLVM_ENABLE_THREADS=ON \
  -DLLVM_ENABLE_UNWIND_TABLES=OFF \
  -DLLVM_EXTERNALIZE_DEBUGINFO=OFF \
  -DLLVM_INCLUDE_BENCHMARKS=OFF \
  -DLLVM_INCLUDE_EXAMPLES=OFF \
  -DLLVM_INCLUDE_TESTS=OFF \
  -DLLVM_INCLUDE_TOOLS=ON \
  -DLLVM_INSTALL_TOOLCHAIN_ONLY=OFF \
  -DLLVM_INSTALL_UTILS=OFF \
  -DLLVM_LIBC_FULL_BUILD=OFF \
  -DLLVM_LIBC_INCLUDE_SCUDO=OFF \
  -DLLVM_LINK_LLVM_DYLIB=OFF \
  -DLLVM_PARALLEL_COMPILE_JOBS=32 \
  -DLLVM_PARALLEL_LINK_JOBS=32 \
  -DLLVM_PARALLEL_TABLEGEN_JOBS=32 \
  -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
  -DLLVM_TARGETS_TO_BUILD=X86 \
  -DLLVM_TARGET_ARCH="X86" \
  -DLLVM_UNREACHABLE_OPTIMIZE=ON  \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_SYSTEM_NAME="Linux" \
  -DRUNTIMES_x86_64-linux-musl_BUILD_SHARED_LIBS=OFF \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_BUILD_TYPE=MinSizeRel \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_BUILD_WITH_INSTALL_RPATH=ON \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER=clang++-21 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER_LAUNCHER=ccache \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER_TARGET="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_FLAGS="-w -g0  -march=x86-64-v3  -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -D_LIBCPP_PROVIDES_DEFAULT_RUNE_TABLE --sysroot ${SYSROOT_DIR}  -static -static-libgcc -nostdinc++ -isystem ${SYSROOT_DIR}/include/c++/v1  "  \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_STANDARD=20 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER=clang-21 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER_LAUNCHER=ccache \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER_TARGET="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_FLAGS="-w -g0 -march=x86-64-v3   -unwind=libunwind --rtlib=compiler-rt --sysroot ${SYSROOT_DIR} -static -static-libgcc " \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_EXE_LINKER_FLAGS="  -Wl,--threads=8 --sysroot ${SYSROOT_DIR}  -march=x86-64-v3 -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -static   -static-libgcc  " \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_INSTALL_PREFIX="${SYSROOT_DIR}" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_INSTALL_RPATH="\$ORIGIN/../lib" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_SYSROOT="${SYSROOT_DIR}" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_TARGET_TRIPLE="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_BUILTINS=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_CRT=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_GWP_ASAN=OFF                       \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_LIBFUZZER=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_MEMPROF=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_ORC=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_PROFILE=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_SANITIZERS=ON        \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_XRAY=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_CXX_LIBRARY=libcxx \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_DEFAULT_TARGET_ARCH="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_DEFAULT_TARGET_TRIPLE="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_ENABLE_STATIC_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_EXTERNALIZE_DEBUGINFO=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF        \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_STATIC_CXX_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_ATOMIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_BUILTINS_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_ASSERTIONS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_FORGIVING_DYNAMIC_CAST=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_HERMETIC_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ABI_UNSTABLE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_CXX_ABI=libcxxabi \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_EXCEPTIONS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_FILESYSTEM=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_LOCALIZATION=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_MONOTONIC_CLOCK=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_RANDOM_DEVICE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_RTTI=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_TIME_ZONE_DATABASE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_UNICODE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_WIDE_CHARACTERS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_MUSL_LIBC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_PTHREAD_API=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_TERMINAL_AVAILABLE=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HERMETIC_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INCLUDE_TESTS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_SUPPORTED_C_LIBRARIES=system \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_SUPPORTED_HARDENING_MODES=none \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBC_CONF_ERRNO_MODE=LIBC_ERRNO_MODE_SHARED \
  -DRUNTIMES_x86_64-linux-musl_LIBC_ENABLE_USE_BY_CLANG=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBC_ENABLE_WIDE_CHARACTERS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_ASSERTIONS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_PEDANTIC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_HIDE_SYMBOLS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LLVM_LIBC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LTO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_MODULES=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LIBC_FULL_BUILD=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LIBC_INCLUDE_SCUDO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_COMPILE_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_LINK_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_TABLEGEN_JOBS=32

  ninja
  ninja  install


  #at this point, since we are using our just built compiler, _it_ shouldn't
  #be linking against libgcc_eh.a so lets remove the dummy lib
  rm "${SYSROOT_DIR}/lib/libgcc_eh.a"

  mkdir -p "${WORK_DIR}/stage3-build"
  cd "${WORK_DIR}/stage3-build"
  cmake -G Ninja "${SRC_DIR}/llvm-project/llvm" \
  -DCMAKE_SYSTEM_NAME="Linux" \
  -DBUILD_SHARED_LIBS=OFF  \
  -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
  -DCLANG_DEFAULT_LINKER=lld \
  -DCLANG_DEFAULT_PIE_ON_LINUX=OFF \
  -DCLANG_DEFAULT_RTLIB=compiler-rt \
  -DCLANG_DEFAULT_UNWINDLIB=libunwind \
  -DCLANG_ENABLE_PLUGINS=OFF \
  -DCLANG_INSTALL_SHARED_LIBRARY=OFF \
  -DCLANG_LINK_CLANG_DYLIB=OFF \
  -DCMAKE_BUILD_TYPE=MinSizeRel \
  -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
  -DCMAKE_CXX_COMPILER="${SYSROOT_DIR}/bin/clang++" \
  -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
  -DCMAKE_CXX_COMPILER_TARGET="x86_64-linux-musl" \
  -DCMAKE_CXX_COMPILER_WORKS=1 \
  -DCMAKE_CXX_FLAGS=" -ffunction-sections -fdata-sections -w -g0  -march=x86-64-v3 -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -D_LIBCPP_PROVIDES_DEFAULT_RUNE_TABLE --sysroot ${SYSROOT_DIR}   -static -static-libgcc -nostdinc++ -isystem ${SYSROOT_DIR}/include/c++/v1  "  \
  -DCMAKE_CXX_STANDARD=20 \
  -DCMAKE_C_COMPILER="${SYSROOT_DIR}/bin/clang" \
  -DCMAKE_C_COMPILER_LAUNCHER=ccache \
  -DCMAKE_C_COMPILER_TARGET="x86_64-linux-musl" \
  -DCMAKE_C_COMPILER_WORKS=1 \
  -DCMAKE_C_FLAGS="  -ffunction-sections -fdata-sections   -w -g0 -march=x86-64-v3   -unwind=libunwind --rtlib=compiler-rt --sysroot ${SYSROOT_DIR} -static -static-libgcc " \
  -DCMAKE_EXE_LINKER_FLAGS="  --sysroot ${SYSROOT_DIR}  -Wl,--gc-sections -Wl,--threads=8  -march=x86-64-v3 -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -static  -static-libgcc " \
  -DCMAKE_INSTALL_PREFIX="${TOOLCHAIN_DIR}" \
  -DCMAKE_INSTALL_RPATH="\$ORIGIN/../lib" \
  -DCMAKE_SYSROOT="${SYSROOT_DIR}" \
  -DCMAKE_TARGET_TRIPLE="x86_64-linux-musl" \
  -DCOMPILER_RT_BUILD_BUILTINS=ON \
  -DCOMPILER_RT_BUILD_CRT=ON \
  -DCOMPILER_RT_BUILD_GWP_ASAN=OFF                       \
  -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
  -DCOMPILER_RT_BUILD_MEMPROF=OFF \
  -DCOMPILER_RT_BUILD_ORC=OFF \
  -DCOMPILER_RT_BUILD_PROFILE=OFF \
  -DCOMPILER_RT_BUILD_SANITIZERS=ON        \
  -DCOMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=OFF \
  -DCOMPILER_RT_BUILD_XRAY=OFF \
  -DCOMPILER_RT_CXX_LIBRARY=libcxx \
  -DCOMPILER_RT_DEFAULT_TARGET_ARCH="x86_64-linux-musl" \
  -DCOMPILER_RT_DEFAULT_TARGET_TRIPLE="x86_64-linux-musl" \
  -DCOMPILER_RT_ENABLE_STATIC_UNWINDER=ON \
  -DCOMPILER_RT_ENABLE_THREADS=ON \
  -DCOMPILER_RT_EXTERNALIZE_DEBUGINFO=OFF \
  -DCOMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF        \
  -DCOMPILER_RT_STATIC_CXX_LIBRARY=ON \
  -DCOMPILER_RT_USE_ATOMIC_LIBRARY=ON \
  -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
  -DCOMPILER_RT_USE_LLVM_UNWINDER=ON \
  -DLIBCXXABI_ENABLE_ASSERTIONS=OFF \
  -DLIBCXXABI_ENABLE_FORGIVING_DYNAMIC_CAST=ON \
  -DLIBCXXABI_ENABLE_SHARED=OFF \
  -DLIBCXXABI_ENABLE_STATIC=ON \
  -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DLIBCXXABI_ENABLE_THREADS=ON \
  -DLIBCXXABI_HERMETIC_STATIC_LIBRARY=ON \
  -DLIBCXXABI_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBCXXABI_INSTALL_STATIC_LIBRARY=ON \
  -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=ON \
  -DLIBCXXABI_USE_COMPILER_RT=ON \
  -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DLIBCXX_ABI_UNSTABLE=ON \
  -DLIBCXX_CXX_ABI=libcxxabi \
  -DLIBCXX_ENABLE_EXCEPTIONS=ON \
  -DLIBCXX_ENABLE_FILESYSTEM=ON \
  -DLIBCXX_ENABLE_LOCALIZATION=ON \
  -DLIBCXX_ENABLE_MONOTONIC_CLOCK=ON \
  -DLIBCXX_ENABLE_RANDOM_DEVICE=ON \
  -DLIBCXX_ENABLE_RTTI=ON \
  -DLIBCXX_ENABLE_SHARED=OFF \
  -DLIBCXX_ENABLE_SHARED_LIBRARY=OFF \
  -DLIBCXX_ENABLE_STATIC=ON \
  -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DLIBCXX_ENABLE_THREADS=ON \
  -DLIBCXX_ENABLE_TIME_ZONE_DATABASE=ON \
  -DLIBCXX_ENABLE_UNICODE=ON \
  -DLIBCXX_ENABLE_WIDE_CHARACTERS=ON \
  -DLIBCXX_HAS_MUSL_LIBC=ON \
  -DLIBCXX_HAS_PTHREAD_API=ON \
  -DLIBCXX_HAS_TERMINAL_AVAILABLE=OFF \
  -DLIBCXX_HERMETIC_STATIC_LIBRARY=ON \
  -DLIBCXX_INCLUDE_TESTS=OFF \
  -DLIBCXX_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBCXX_INSTALL_STATIC_LIBRARY=ON \
  -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
  -DLIBCXX_SUPPORTED_C_LIBRARIES=system \
  -DLIBCXX_SUPPORTED_HARDENING_MODES=none \
  -DLIBCXX_USE_COMPILER_RT=ON \
  -DLIBC_CONF_ERRNO_MODE=LIBC_ERRNO_MODE_SHARED \
  -DLIBC_ENABLE_USE_BY_CLANG=OFF \
  -DLIBC_ENABLE_WIDE_CHARACTERS=ON \
  -DLIBUNWIND_ENABLE_ASSERTIONS=OFF \
  -DLIBUNWIND_ENABLE_PEDANTIC=OFF \
  -DLIBUNWIND_ENABLE_SHARED=OFF \
  -DLIBUNWIND_ENABLE_STATIC=ON \
  -DLIBUNWIND_ENABLE_THREADS=ON \
  -DLIBUNWIND_HIDE_SYMBOLS=ON \
  -DLIBUNWIND_INSTALL_SHARED_LIBRARY=OFF \
  -DLIBUNWIND_INSTALL_STATIC_LIBRARY=ON \
  -DLIBUNWIND_USE_COMPILER_RT=ON \
  -DLLDB_DISABLE_CURSES=ON \
  -DLLDB_DISABLE_LIBEDIT=ON \
  -DLLDB_DISABLE_PYTHON=ON \
  -DLLDB_ENABLE_LIBXML2=OFF \
  -DLLDB_ENABLE_LUA=OFF \
  -DLLDB_ENABLE_LZMA=OFF  \
  -DLLVM_BUILD_LLVM_C_DYLIB=OFF \
  -DLLVM_BUILD_LLVM_DYLIB=OFF \
  -DLLVM_BUILD_STATIC=ON \
  -DLLVM_CCACHE_BUILD=ON \
  -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-linux-musl \
  -DLLVM_DYLIB_EXPORT_INLINES=OFF \
  -DLLVM_ENABLE_EH=OFF \
  -DLLVM_ENABLE_EXPENSIVE_CHECKS=OFF \
  -DLLVM_ENABLE_FATLTO=ON \
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLLVM_ENABLE_LIBPFM=ON \
  -DLLVM_ENABLE_LLD=ON \
  -DLLVM_ENABLE_LLVM_LIBC=OFF \
  -DLLVM_ENABLE_LTO=OFF \
  -DLLVM_ENABLE_MODULES=OFF \
  -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \
  -DLLVM_ENABLE_PIC=OFF \
  -DLLVM_ENABLE_PLUGINS=OFF \
  -DLLVM_ENABLE_PROJECTS="clang;lld" \
  -DLLVM_ENABLE_RTTI=OFF \
  -DLLVM_ENABLE_RUNTIMES="compiler-rt;libunwind;libcxx;libcxxabi" \
  -DLLVM_ENABLE_THREADS=ON \
  -DLLVM_ENABLE_UNWIND_TABLES=OFF \
  -DLLVM_EXTERNALIZE_DEBUGINFO=OFF \
  -DLLVM_INCLUDE_BENCHMARKS=OFF \
  -DLLVM_INCLUDE_EXAMPLES=OFF \
  -DLLVM_INCLUDE_TESTS=OFF \
  -DLLVM_INCLUDE_TOOLS=ON \
  -DLLVM_INSTALL_TOOLCHAIN_ONLY=OFF \
  -DLLVM_INSTALL_UTILS=OFF \
  -DLLVM_LIBC_FULL_BUILD=OFF \
  -DLLVM_LIBC_INCLUDE_SCUDO=OFF \
  -DLLVM_LINK_LLVM_DYLIB=OFF \
  -DLLVM_PARALLEL_COMPILE_JOBS=32 \
  -DLLVM_PARALLEL_LINK_JOBS=32 \
  -DLLVM_PARALLEL_TABLEGEN_JOBS=32 \
  -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
  -DLLVM_TARGETS_TO_BUILD=X86 \
  -DLLVM_TARGET_ARCH="X86" \
  -DLLVM_UNREACHABLE_OPTIMIZE=ON  \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_SYSTEM_NAME="Linux" \
  -DRUNTIMES_x86_64-linux-musl_BUILD_SHARED_LIBS=OFF \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_BUILD_TYPE=MinSizeRel \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_BUILD_WITH_INSTALL_RPATH=ON \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER="${SYSROOT_DIR}/bin/clang++" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER_LAUNCHER=ccache \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_COMPILER_TARGET="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_FLAGS="-w -g0  -march=x86-64-v3  -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -D_LIBCPP_PROVIDES_DEFAULT_RUNE_TABLE --sysroot ${SYSROOT_DIR}  -static -static-libgcc -nostdinc++ -isystem ${SYSROOT_DIR}/include/c++/v1  "  \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_CXX_STANDARD=20 \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER="${SYSROOT_DIR}/bin/clang" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER_LAUNCHER=ccache \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_COMPILER_TARGET="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_C_FLAGS="-w -g0 -march=x86-64-v3   -unwind=libunwind --rtlib=compiler-rt --sysroot ${SYSROOT_DIR} -static -static-libgcc " \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_EXE_LINKER_FLAGS=" --sysroot ${SYSROOT_DIR} -Wl,--threads=8 -march=x86-64-v3 -stdlib=libc++ -unwind=libunwind --rtlib=compiler-rt -static   -static-libgcc  " \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_INSTALL_PREFIX="${TOOLCHAIN_DIR}" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_INSTALL_RPATH="\$ORIGIN/../lib" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_SYSROOT="${SYSROOT_DIR}" \
  -DRUNTIMES_x86_64-linux-musl_CMAKE_TARGET_TRIPLE="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_BUILTINS=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_CRT=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_GWP_ASAN=OFF                       \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_LIBFUZZER=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_MEMPROF=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_ORC=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_PROFILE=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_SANITIZERS=ON        \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_BUILD_XRAY=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_CXX_LIBRARY=libcxx \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_DEFAULT_TARGET_ARCH="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_DEFAULT_TARGET_TRIPLE="x86_64-linux-musl" \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_ENABLE_STATIC_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_EXTERNALIZE_DEBUGINFO=OFF \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED=OFF        \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_STATIC_CXX_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_ATOMIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_BUILTINS_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_COMPILER_RT_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_ASSERTIONS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_FORGIVING_DYNAMIC_CAST=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_HERMETIC_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ABI_UNSTABLE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_CXX_ABI=libcxxabi \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_EXCEPTIONS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_FILESYSTEM=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_LOCALIZATION=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_MONOTONIC_CLOCK=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_RANDOM_DEVICE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_RTTI=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_TIME_ZONE_DATABASE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_UNICODE=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_ENABLE_WIDE_CHARACTERS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_MUSL_LIBC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_PTHREAD_API=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HAS_TERMINAL_AVAILABLE=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_HERMETIC_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INCLUDE_TESTS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_SUPPORTED_C_LIBRARIES=system \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_SUPPORTED_HARDENING_MODES=none \
  -DRUNTIMES_x86_64-linux-musl_LIBCXX_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBC_CONF_ERRNO_MODE=LIBC_ERRNO_MODE_SHARED \
  -DRUNTIMES_x86_64-linux-musl_LIBC_ENABLE_USE_BY_CLANG=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBC_ENABLE_WIDE_CHARACTERS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_ASSERTIONS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_PEDANTIC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_SHARED=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_HIDE_SYMBOLS=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_INSTALL_SHARED_LIBRARY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_INSTALL_STATIC_LIBRARY=ON \
  -DRUNTIMES_x86_64-linux-musl_LIBUNWIND_USE_COMPILER_RT=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_BUILD_LLVM_C_DYLIB=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_BUILD_LLVM_DYLIB=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_BUILD_STATIC=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_CCACHE_BUILD=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_DEFAULT_TARGET_TRIPLE=x86_64-linux-musl \
  -DRUNTIMES_x86_64-linux-musl_LLVM_DYLIB_EXPORT_INLINES=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_EH=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_EXPENSIVE_CHECKS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_FATLTO=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LIBCXX=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LIBPFM=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LLD=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LLVM_LIBC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_LTO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_MODULES=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_PIC=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_PLUGINS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_PROJECTS="clang;lld" \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_RTTI=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_RUNTIMES="compiler-rt;libunwind;libcxx;libcxxabi" \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_THREADS=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_ENABLE_UNWIND_TABLES=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_EXTERNALIZE_DEBUGINFO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_INCLUDE_BENCHMARKS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_INCLUDE_EXAMPLES=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_INCLUDE_TESTS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_INCLUDE_TOOLS=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_INSTALL_TOOLCHAIN_ONLY=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_INSTALL_UTILS=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LIBC_FULL_BUILD=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LIBC_INCLUDE_SCUDO=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_LINK_LLVM_DYLIB=OFF \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_COMPILE_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_LINK_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_PARALLEL_TABLEGEN_JOBS=32 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_STATIC_LINK_CXX_STDLIB=ON \
  -DRUNTIMES_x86_64-linux-musl_LLVM_TARGETS_TO_BUILD=X86 \
  -DRUNTIMES_x86_64-linux-musl_LLVM_TARGET_ARCH="X86" \
  -DRUNTIMES_x86_64-linux-musl_LLVM_UNREACHABLE_OPTIMIZE=ON

  ninja
  ninja  install

  cd "${SRC_DIR}/linux"
  make headers_install ARCH=x86_64 INSTALL_HDR_PATH="${TOOLCHAIN_DIR}/usr"

  cd "${SRC_DIR}/musl"
  make clean || true

  CC=clang CFLAGS="-O2 -flto=full -ffat-lto-objects -static " ./configure --prefix="${TOOLCHAIN_DIR}" --disable-shared
  make -j${JOBS} CC="${TOOLCHAIN_DIR}/bin/clang"
  make install

  cp "${SCRIPT_DIR}/musl-clang" "${TOOLCHAIN_DIR}/bin/"
  cp "${SCRIPT_DIR}/musl-clang++" "${TOOLCHAIN_DIR}/bin/"
fi

SCRIPT_DIR="${HOME}/x86_64-linux-llvm"
SRC_DIR="${HOME}/src"
BUILD_DIR="${HOME}/build"
SYSROOT_DIR="${HOME}/sysroot"
NUM_CORES=$(nproc)
KERNEL_DIR="${SRC_DIR}/linux"
export ARCH=x86_64


NO_WARNINGS_SUS=" -Wno-address-of-packed-member -Wno-int-in-bool-context  -Wno-format-truncation -Wno-self-assign -Wno-string-plus-int -Wno-shift-sign-overflow -Wno-string-conversion -Wno-class-varargs -Wno-array-bounds-pointer-arithmetic -Wno-alloca -Wno-bitfield-enum-conversion -Wno-anon-enum-enum-conversion -Wno-format-nonliteral -Wno-assign-enum -Wno-missing-variable-declarations -Wno-conditional-uninitialized -Wno-format-non-iso -Wno-format -Wno-switch-enum -Wno-bad-function-cast -Wno-tautological-value-range-compare -Wno-duplicate-enum -Wno-implicit-int-conversion -Wno-switch-default  -Wno-cast-align -Wno-cast-qual -Wno-sign-conversion -Wno-shorten-64-to-32 -Wno-sign-compare "
NO_WARNINGS_COOL=" -Wno-implicit-int-float-conversion -Wno-misleading-indentation -Wno-float-conversion -Wno-cast-function-type-strict  -Wno-double-promotion  -Wno-unused-command-line-argument -Wno-unused-result -Wno-unused-variable -Wno-unused-function -Wno-missing-prototypes -Wno-missing-include-dirs -Wno-missing-field-initializers -Wno-undef -Wno-implicit-fallthrough -Wno-unreachable-code-break -Wno-unused-macros -Wno-comma -Wno-extra-semi-stmt  -Wno-compound-token-split-by-space -Wno-shadow -Wno-unreachable-code-return -Wno-unused-parameter -Wno-unreachable-code -Wno-covered-switch-default -Wno-redundant-parens -Wno-declaration-after-statement  -Wno-used-but-marked-unused -Wno-packed -Wno-c++98-compat -Wno-c2y-extensions -Wno-pedantic -Wno-pre-c11-compat -Wno-language-extension-token -Wno-c++-compat -Wno-disabled-macro-expansion -Wno-keyword-macro -Wno-c23-compat -Wno-variadic-macros -Wno-reserved-macro-identifier -Wno-unsafe-buffer-usage  -Wno-padded -Wno-missing-noreturn -Wno-gnu-conditional-omitted-operand -Wno-documentation -Wno-documentation-unknown-command -Wno-reserved-identifier "
NO_WARNINGS=" -Wno-error -Weverything ${NO_WARNINGS_COOL}  ${NO_WARNINGS_SUS}   "

# Define LLVM toolchain variables
HOST_CC="clang-21"
HOST_CXX="clang++-21"
HOST_LD="ld.lld-21"
HOST_AR="llvm-ar-21"
HOST_NM="llvm-nm-21"
HOST_STRIP="llvm-strip-21"
HOST_OBJCOPY="llvm-objcopy-21"
HOST_OBJDUMP="llvm-objdump-21"
HOST_READELF="llvm-readelf-21"

TARGET_CC="${TOOLCHAIN_DIR}/bin/clang"
TARGET_LD="${TOOLCHAIN_DIR}/bin/ld.lld"
TARGET_AR="${TOOLCHAIN_DIR}/bin/llvm-ar"
TARGET_NM="${TOOLCHAIN_DIR}/bin/llvm-nm"
TARGET_STRIP="${TOOLCHAIN_DIR}/bin/llvm-strip"
TARGET_OBJCOPY="${TOOLCHAIN_DIR}/bin/llvm-objcopy"
TARGET_OBJDUMP="${TOOLCHAIN_DIR}/bin/llvm-objdump"
TARGET_READELF="${TOOLCHAIN_DIR}/bin/llvm-readelf"


CFLAGS_KERNEL=" ${NO_WARNINGS} -O3  "

mkdir -p "${BUILD_DIR}"
mkdir -p "${SRC_DIR}"

echo "Building the kernel..."

if [ ! -d "${KERNEL_DIR}" ]; then
    git clone --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git "${KERNEL_DIR}"
fi


cd "${KERNEL_DIR}"

# Clean any previous build artifacts
make mrproper

# Make base KVM guest config
make -j${NUM_CORES} LLVM=1 \
    CC=${TARGET_CC} \
    LD=${TARGET_LD} \
    AR=${TARGET_AR} \
    NM=${TARGET_NM} \
    STRIP=${TARGET_STRIP} \
    OBJCOPY=${TARGET_OBJCOPY} \
    OBJDUMP=${TARGET_OBJDUMP} \
    READELF=${TARGET_READELF} \
    HOSTCC=${HOST_CC} \
    HOSTCXX=${HOST_CXX} \
    HOSTAR=${HOST_AR} \
    HOSTLD=${HOST_LD} \
    LLVM_IAS=1 \
    HOSTCFLAGS=" ${NO_WARNINGS} " \
    HOSTLDFLAGS="" \
    KBUILD_HOSTLDFLAGS="" \
    CFLAGS_KERNEL="${CFLAGS_KERNEL} --sysroot ${TOOLCHAIN_DIR}  " \
    CROSS_COMPILE="" \
    LDFLAGS_vmlinux=" -z max-page-size=0x200000  " \
    kvm_guest.config

# Enable debugging options in the kernel config
echo "Enabling kernel debugging options..."
cat >> .config << EOF
CONFIG_DEBUG_INFO=y
CONFIG_EARLY_PRINTK=y
CONFIG_PRINTK_TIME=y
CONFIG_DYNAMIC_DEBUG=n
CONFIG_PANIC_ON_OOPS=n
CONFIG_PANIC_TIMEOUT=-1
CONFIG_BOOT_PRINTK_DELAY=n
CONFIG_DEBUG_FS=n
CONFIG_DETECT_HUNG_TASK=y
CONFIG_DEBUG_STACKOVERFLOW=y
CONFIG_KGDB=n
CONFIG_KGDB_SERIAL_CONSOLE=n
CONFIG_DEBUG_RODATA=y
CONFIG_KALLSYMS=y
CONFIG_KALLSYMS_ALL=n
CONFIG_FRAME_POINTER=y
CONFIG_MAGIC_SYSRQ=y
CONFIG_X86_VERBOSE_BOOTUP=y
CONFIG_DEBUG_MEMORY_INIT=y
CONFIG_BLK_DEV_INITRD=y
CONFIG_BLK_DEV_RAM=y
CONFIG_BLK_DEV_RAM_COUNT=16
CONFIG_BLK_DEV_RAM_SIZE=65536
CONFIG_RD_GZIP=y
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
CONFIG_MODULE_COMPRESS=y
CONFIG_TRANSPARENT_HUGEPAGE=y
CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS=y
CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y
CONFIG_MCORE2=y
CONFIG_X86_INTEL_PSTATE=y
CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
CONFIG_SCHED_MC=y
CONFIG_SCHED_SMT=y
CONFIG_NUMA_BALANCING=y
CONFIG_MQ_IOCTL=y
CONFIG_BLK_WBT=y
CONFIG_BLK_WBT_MQ=y
CONFIG_SLUB=y
CONFIG_SLUB_CPU_PARTIAL=y
CONFIG_DEBUG_KERNEL=n
CONFIG_DEBUG_INFO=n
CONFIG_CPU_FREQ=y
CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
CONFIG_AUTOFDO_CLANG=n
CONFIG_PROPELLER_CLANG=n

CONFIG_KERNEL_ZSTD=y
CONFIG_ZSTD_CLEVEL=1
CONFIG_INIT_STACK_NONE=y

# Size optimizations
CONFIG_CC_OPTIMIZE_FOR_SIZE=y
CONFIG_KERNEL_XZ=y
CONFIG_XZ_DEC_BCJ=n
CONFIG_CRYPTO=n

# Boot speed optimizations
CONFIG_PRINTK=y
CONFIG_EARLY_PRINTK=y
CONFIG_PRINTK_TIME=y
CONFIG_LOG_BUF_SHIFT=12
CONFIG_KALLSYMS=y
CONFIG_KALLSYMS_ALL=n

# Remove unnecessary subsystems
CONFIG_INPUT=n
CONFIG_SOUND=n
CONFIG_USB=n
CONFIG_MEDIA_SUPPORT=n
CONFIG_WIRELESS=n
CONFIG_WLAN=n

# Reduce init requirements
CONFIG_EMBEDDED=y
CONFIG_EXPERT=y
CONFIG_MODULES=n

EOF

# Update the config
make olddefconfig

# Build the kernel (bzImage) with LLVM
make -j${NUM_CORES} LLVM=1 \
    CC=${TARGET_CC} \
    LD=${TARGET_LD} \
    AR=${TARGET_AR} \
    NM=${TARGET_NM} \
    STRIP=${TARGET_STRIP} \
    OBJCOPY=${TARGET_OBJCOPY} \
    OBJDUMP=${TARGET_OBJDUMP} \
    READELF=${TARGET_READELF} \
    HOSTCC=${HOST_CC} \
    HOSTCXX=${HOST_CXX} \
    HOSTAR=${HOST_AR} \
    HOSTLD=${HOST_LD} \
    LLVM_IAS=1 \
    HOSTCFLAGS=" ${NO_WARNINGS}  " \
    HOSTLDFLAGS="" \
    KBUILD_HOSTLDFLAGS="" \
    CFLAGS_KERNEL="${CFLAGS_KERNEL} --sysroot ${TOOLCHAIN_DIR}  " \
    CROSS_COMPILE="" \
    LDFLAGS_vmlinux=" -z max-page-size=0x200000 " \
    bzImage

# Print kernel size
echo "Kernel size:"
ls -lh arch/x86/boot/bzImage


# BusyBox setup
INITRAMFS_DIR="${BUILD_DIR}/initramfs"
BUSYBOX_DIR="${BUILD_DIR}/busybox-git"
BUSYBOX_GIT="https://git.busybox.net/busybox"

# Create build directories
mkdir -p "${INITRAMFS_DIR}"

# Download and build BusyBox from Git
echo "Building BusyBox..."
cd "${BUILD_DIR}"

# Clone BusyBox Git repository
if [ ! -d "busybox-git" ]; then
    git clone "${BUSYBOX_GIT}" busybox-git
fi

# Configure and build BusyBox statically with LLVM toolchain
cd "${BUSYBOX_DIR}"
make distclean
make -j${NUM_CORES} \
  CC=${TARGET_CC} \
  LD=${TARGET_LD} \
  AR=${TARGET_AR} \
  NM=${TARGET_NM} \
  STRIP=${TARGET_STRIP} \
  OBJCOPY=${TARGET_OBJCOPY} \
  OBJDUMP=${TARGET_OBJDUMP} \
  READELF=${TARGET_READELF} \
  HOSTCC=${HOST_CC} \
  HOSTCXX=${HOST_CXX} \
  HOSTAR=${HOST_AR} \
  HOSTLD=${HOST_LD} \
  CFLAGS=" --rtlib=compiler-rt -unwind=libunwind ${NO_WARNINGS} --sysroot ${TOOLCHAIN_DIR} " \
  defconfig

# Configure BusyBox for static build
sed -i 's/# CONFIG_STATIC is not set/CONFIG_STATIC=y/' .config
sed -i 's/CONFIG_TC=y/CONFIG_TC=n/' .config

# Build with the same LLVM toolchain as the kernel
make -j${NUM_CORES} \
    CC=${TARGET_CC} \
    HOSTCC=${HOST_CC} \
    LD=${TARGET_LD} \
    AR=${TARGET_AR} \
    NM=${TARGET_NM} \
    STRIP=${TARGET_STRIP} \
    OBJCOPY=${TARGET_OBJCOPY} \
    OBJDUMP=${TARGET_OBJDUMP} \
    CFLAGS=" --rtlib=compiler-rt -unwind=libunwind ${NO_WARNINGS} --sysroot ${TOOLCHAIN_DIR}  "

make install CONFIG_PREFIX="${INITRAMFS_DIR}"

# Create initramfs
echo "Creating initramfs..."

# Create additional directory structure
cd "${INITRAMFS_DIR}"
mkdir -p {proc,sys,dev,tmp,root}

# Create init script
cat > init << 'EOF'
#!/bin/sh

# Mount essential filesystems
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev || mknod -m 0666 /dev/null c 1 3

# Print success message
echo "*************************************"
echo "*                                   *"
echo "* Minimal initramfs boot successful *"
echo "*                                   *"
echo "*************************************"

# Display kernel log
dmesg | tail

# Drop to a shell
exec /bin/sh
EOF

# Make init executable
chmod +x init

# Create the initramfs cpio archive
cd "${INITRAMFS_DIR}"
find . -print0 | cpio --null -ov --format=newc | gzip -9 > "${BUILD_DIR}/initramfs.cpio.gz"

echo "Initramfs created at: ${BUILD_DIR}/initramfs.cpio.gz"
echo
echo "You can now boot your kernel with QEMU using:"
echo "qemu-system-x86_64 -kernel ${KERNEL_DIR}/arch/x86/boot/bzImage -initrd ${BUILD_DIR}/initramfs.cpio.gz -append \"console=ttyS0 earlyprintk=serial,ttyS0,115200 debug loglevel=7 root=/dev/ram0 rdinit=/init  nokaslr quiet fastboot noapic  \" -nographic"
